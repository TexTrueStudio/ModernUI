import org.gradle.internal.os.OperatingSystem

version = "${core_version}" as String

sourceSets {
    //main {
        //java {
            //srcDir 'src'
            //exclude '**/modernui/view/menu/ListMenuItemView.java'
        //}
    //}
}

dependencies {
    implementation "org.apache.logging.log4j:log4j-core:${log4j_version}"
    implementation "org.apache.logging.log4j:log4j-api:${log4j_version}"
    implementation "com.ibm.icu:icu4j:${icu4j_version}"
    implementation "it.unimi.dsi:fastutil:${fastutil_version}"

    implementation "com.github.ben-manes.caffeine:caffeine:${caffeine_version}"
    implementation "com.vladsch.flexmark:flexmark:${flexmark_version}"
    implementation "io.reactivex.rxjava3:rxjava:${rxjava_version}"

    //implementation "icyllis.arcticgi:ArcticGI:${arc_version}"

    def lwjglNatives
    switch (OperatingSystem.current()) {
        case OperatingSystem.WINDOWS:
            def osArch = System.getProperty("os.arch")
            lwjglNatives = osArch.contains("64")
                    ? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
                    : "natives-windows-x86"
            break
        case OperatingSystem.MAC_OS:
            lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
            break
        default:
            def osArch = System.getProperty("os.arch")
            lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
                    ? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
                    : "natives-linux"
            break
    }

    implementation platform("org.lwjgl:lwjgl-bom:${lwjgl_version}")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-jemalloc"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-shaderc"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-tinyfd"
    implementation "org.lwjgl:lwjgl-vma"
    implementation "org.lwjgl:lwjgl-vulkan"
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-jemalloc::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-shaderc::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-tinyfd::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-vma::$lwjglNatives"
    if (lwjglNatives == "natives-macos" || lwjglNatives == "natives-macos-arm64") {
        runtimeOnly "org.lwjgl:lwjgl-vulkan::$lwjglNatives"
    }
}

jar {
    manifest {
        attributes(
                "Specification-Title"     : "ModernUI-Core",
                "Specification-Vendor"    : "BloCamLimb",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "BloCamLimb",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        )
    }
}

publishing {
    repositories {
    }
    publications {
        mavenCore(MavenPublication) {
            artifact(jar.archiveFile) {
                builtBy build
            }
            artifact(sourcesJar.archiveFile) {
                builtBy build
                classifier 'sources'
            }


        }
    }
}